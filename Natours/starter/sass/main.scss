$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-black: #000;
$color-white: #fff;

*, *::before, *::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

/* 1rem = 10px */
/* rem is in relation to the root's font-size */
html {
    /* having px is bad practice */
    /* use percentage */
    /* zooming page allows increase of font-size */
    /* percentage is RELATIVE TO PARENT */
    /* since default value for root's font-size is 16 px, 62.5% of 16px is 10px */
    font-size: 62.5%; /* 10 px / 16 px = 0.625 */
    /* font-size: 10px; */
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem; /* having on reference allows us to change everything simultaneously and understand the relation of the screen */
    box-sizing: border-box;
}

.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.8), 
        rgba($color-primary-dark, 0.8)), 
        url(../img/hero.jpg
    );
    background-size: cover;
    background-position: top; /* top doesn't get cropped out */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    position: relative;

    // & = .header
    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem; 
    }

    &__logo {
        height: 3.5rem;
    }
    
    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%); /*  shifts in relation to the element and not the parent itself */
        text-align: center;
    }
}

.header__logo-box:hover .header__logo{
    /* can reuse keyframe animations */
    animation: moveInRight 0.6s ease-in;
}


.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    /* determine is back part of element is visible or hidden for the user */
    backface-visibility: hidden;
    margin-bottom: 6rem;

    &--main {
        display: block;
        font-size: 6rem;
        font-weight: 700;
        letter-spacing: 3.5rem;
    
        /* giving animation names allows keyframes to know which part is animated */
        animation-name: moveInLeft;
        animation-duration: 2s;
        animation-timing-function: ease-out;
        /* animation happens 3 times */
        /* animation-iteration-count: 3; */
    
        /* waits 3 seconds before beginning animation */
        /* animation-delay: 3s; */
    }
    
    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 400;
        letter-spacing: 1.75rem;
    
        /* short-hand way of writing */
        animation: moveInRight 2s ease-out;
        /* animation-name: moveInRight;
        animation-duration: 2s; */
    }
}

@keyframes moveInLeft {
    /* when animation begins */
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }
    /* when animation is 80% done */
    80% {
        transform: translateX(1rem);
    }
    /* when animation is done */
    100% {
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    /* when animation begins */
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }
    /* when animation is 80% done */
    80% {
        transform: translateX(-1rem);
    }
    /* when animation is done */
    100% {
        transform: translateX(0);
    }
}

@keyframes moveInBottom {
    /* when animation begins */
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }
    /* when animation is done */
    100% {
        transform: translateY(0);
    }
}

/* :link is a pseudo class */
.btn {
    &:link, &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative;
        font-size: 1.6rem;
    }

    &:hover {
        transform: translateY(-0.3rem);
        /* x y blur color */
        box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }
    
    /* active means when button is pressed */
    &:active {
        transform: translateY(-0.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black, 0.2);
    }
    
    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }
    
    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all 0.4s;
    }
    
    &--animated {
        animation: moveInBottom 0.5s ease-out 0.75s;
        animation-fill-mode: backwards;
    }
}


